---
# Login API introduction
SwaggerURL: "https://raw.githubusercontent.com/vippsas/vipps-login-api/master/docs/swagger.json"

Intro:
    title: Vipps Login API
    introduction: Understanding the process of logging in with Vipps
    description: Before implementing the Vipps login API, youâ€™ll need to get keys for testing and production through the developer portal. 
    imagePath: "../../assets/images/womanWithPhone.svg"

FlowChart:
    title: Steps to implement for Login
    browserImage: "../../assets/ecom-illustrations/login-flow.svg"
    tabletImage:
    mobileImage: "../../assets/ecom-illustrations/login-flow-mobile.svg"

Sections:
    Prerequisites:
        core_concepts:
            title: Get started with core concepts
            introduction: Before implementing Vipps Login, we recommend you to take a look at the coore concepts of [OAuth 2.0] and [OpenID Connect] if you're new to the subjects.
            imagePath:
            endpoints:
            keywords:
                OAuth 2.0:
                    title: What is OAuth 2.0?
                    description: OAuth 2.0 is the industry-standard protocol for authorization. 
                    linkTitle: API documentation Core concepts
                    link: https://github.com/vippsas/vipps-login-api/blob/master/vipps-login-api.md#oauth-20
                OpenID Connect:
                    title: What is OpenID Connect?
                    description: OpenID Connect is a simple identity layer on top of the OAuth 2.0 protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in a REST-like manner
                    linkTitle: API documentation OpenID Connect
                    link: https://github.com/vippsas/vipps-login-api/blob/master/vipps-login-api.md#open-id-connect

        client_configuration:
            title: Client configuration.
            introduction: To be able to implement Vipps Login, you need do some configurations in cooperation with Vipps. This includes [application whitelisting], defining [scopes] and sharing of [client ID and client secret].
            imagePath:
            endpoints:
            keywords:
                application whitelisting:
                    title: What is application whitelisting?
                    description: empty...
                scopes:
                    title: What do you mean by scopes?
                    description: empty...
                client ID and client secret:
                    title: What about client ID and client secret?
                    description: empty...



    The login process:
        start_authorization:
            title: User choose login with Vipps.
            introduction: When the user is at your website and chooses to pay with Vipps, you need to start authorization.
            imagePath: ../../assets/ecom-steps/MobileAndBrowser.svg
            endpoints:
                - name: "/oauth2/auth" #"[callbackPrefix]/v2/oauth2/auth"
                  description: Start authorization against Vipps login by redirect the user to Vipps authorization page. The user is sent with state, redirect URI and the scopes you already selected as necessary when login to your website.
                  mode: GET
            responses: true
            keywords:

        user_login:
            title: User confirms
            introduction: The user will now need to fill in his mobile number to activate login through the Vipps app. Thereafter, the user is asked to confirm that the Vipps logo shown on screen is identitical to the one shown in Vipps. By confirming, the user approves that Vipps can share personal information to your website. Lastly, the user is sent to the redirect-uri, as specified in beforehand, with associated state and code in body.
            imagePath:
            endpoints:
            responses:
            keywords:

        get_information:
            title: Get information about user
            introduction: As the user is redirected to your page, you can now collect information about the user logged in. 
            imagePath: ../../assets/ecom-steps/Initiate.svg
            endpoints:
                - name: "/oauth2/token"
                  description: Collect information about the user by requesting ID Token and Access token from the Vipps API. The request needs to include code, client id, and client secret sent with the user when redirected to your site from the Vipps login portal. The ID Token contains all the information specified with the scopes.
                  mode: POST
            responses: true
            keywords:

    Important to implement:
        access_information:
            title: Get updated information
            introduction: The access token collected can be used to access the information Vipps possesses about the user. This is usefull as the information about the user can be changed continously and new scopes might be added.
            imagePath: ../../assets/ecom-steps/ConfirmInApp.svg
            endpoints:
                - name: "/userinfo"
                  description: Retrieves the user information.
                  mode: POST
            responses: true
            keywords:


Outro:
    title: Great! Now you know how the payment process works
    description: You're ready to move forward to the documentation
    imagePath: "../../assets/images/jumpingMan.svg"
    link: http://localhost:3000/documentation/secure-login/
